/** ****************************************************************

    CSS Variables

    Font rules are setup in base.scss for all major
    elements using CSS variables.
    When there's need to override a font rule, there's no need to
    set again the rules, but it's best to just set a new value for
    a CSS variable for a font rule.

    **************************************************************** */
@import 'settings';

:root {
  /**
   * @tokens Colors
   * @presenter Color
   */
  --color-primary: #000;
  --color-black: #000;
  --color-white: #fff;

  // grayscale
  --color-dark-gray: #4a4a4a;
  --color-gray: #777;
  --color-light-gray: #f6f6f6;


  /* Breakpoint variables */
  --breakpoint-small: #{strip-unit(map_get($breakpoints, phone))};
  --breakpoint-medium: #{strip-unit(map_get($breakpoints, tablet))};
  --breakpoint-large: #{strip-unit(map_get($breakpoints, desktop))};
  --breakpoint-xlarge: #{strip-unit(map_get($breakpoints, desktophd))};


  /* Globals */
  --global-border-radius: 20px;


  /* sectioning */
  --var-section-margin: 3rem;

  /* type modular scale */
  // body font size
  --text-base-size: 1rem; // 18px - html is set to 112.5%

  // type scale
  --text-scale-ratio: 1.25; // base mobile ratio
  //--text-base: 1rem;
  --text-scale-1: calc(1rem * var(--text-scale-ratio)); // h3
  --text-scale-2: calc(var(--text-scale-1) * var(--text-scale-ratio)); // h2
  --text-scale-3: calc(var(--text-scale-2) * var(--text-scale-ratio)); // h1

  --text-scale-4: calc(var(--text-scale-3) * var(--text-scale-ratio));
  --text-scale-5: calc(var(--text-scale-4) * var(--text-scale-ratio));
  --text-scale-6: calc(var(--text-scale-5) * var(--text-scale-ratio)); // h2 hero


  /* max text sizes  */
  --text-max-width: 38rem;

  /* focus state */
  --focus-outline: none;
  --focus-box-shadow: none;
  --focus-border-size: 2px;
  --focus-border-style: dashed;
  --focus-border-color: var(--color-black);


  /* vf initial values */
  --heading-weight: 700;
  --text-weight: $body-font-weight;
  --text-width: 100;
  // --text-opticalsize: 16;

  /* spacing */
  --text-letter-spacing: 1.2px;
  --text-on-dark-letter-spacing: 2px;

  /* Paragraph variables */
  --p-line-height-min: 1.5;
  --p-line-height-max: 1.6;
  --p-font-size-min: 1.0;
  --p-font-size-max: 1.25;
  //--p-vf-weight: var(--text-weight);
  //--p-vf-width: var(--text-width);

  /* H1 variables */
  --h1-font-size: var(--text-scale-6);
  --h1-line-height: 1.5;

  /* H2 variables */
  --h2-font-size: var(--text-scale-2);
  --h2-line-height: 1.5;

  /* H3 variables */
  --h3-font-size: var(--text-scale-1);
  --h3-line-height: 1.5;


  /* Dropcap variables */
  --dc-line-height: .8;
  --dc-font-size: 3.4;

  /* Blockquote variables */
  //--bq-line-height-min: 1.3;
  --bq-line-height: 1.5;
  --bq-font-size-min: 2.7;
  --bq-font-size-max: 5;

  /* buttons */
  --button-min-width: 96px;
  --button-height: 40px;
  --button-padding: 0 1.14rem;
  --button-color: var(--color-primary);
  --button-background-color: var(--color-light-gray);
  --button-border: 0; // 1px solid $color-light-gray;
  --button-border-radius: var(--global-border-radius);

  --button-primary-color: var(--color-white);
  --button-primary-background-color: var(--color-primary);
  --button-primary-border: 1px solid var(--color-primary);

  /* form fields */
  --form-field-height: 40px;
  --form-field-border: 1px solid var(--color-gray);
  --form-field-max-width: 240px;

  /* Z indexes */
  --burgher-menu-z-index: 11;
  --mobile-menu-z-index: 10;
}
